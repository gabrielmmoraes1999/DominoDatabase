package view;

import java.io.File;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import modelo.Backup;
import modelo.BackupDAO;
import modelo.ConversaoDAO;
import util.Config;
import util.Sistema;

/**
 *
 * @author Gabriel Moraes
 */
public class InternaRestauraBackup extends javax.swing.JInternalFrame {
    
    TableRowSorter trs;
    DefaultTableModel modelo;
    
    BackupDAO bDAO = new BackupDAO();
    SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy HH:mm");
    SimpleDateFormat formatoArquivo = new SimpleDateFormat("yyyyMMdd_HHmm");

    public InternaRestauraBackup() {
        setFrameIcon(new javax.swing.ImageIcon(new Config().getIcon()));
        initComponents();
        carregarBackups();
    }
    
    public void carregarBackups() {
        modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setNumRows(0);
        
        String situacao = "Indisponivel";
        
        //Verificar na pasta se o backup ainda existe
        if(new File(System.getProperty("user.dir")+"\\Backup").exists()) {
            new File(System.getProperty("user.dir")+"\\Backup").mkdirs();
        }
        
        for(Backup b : bDAO.lerTodos()) {
            if(new File(System.getProperty("user.dir")+"\\Backup\\"+formatoArquivo.format(b.getData())+".fbk").exists()) {
                situacao = "Realizado com sucesso!";
            }
            
            modelo.addRow(
                    new Object[] {
                        formato.format(b.getData()), situacao
                    }
            );
            situacao = "Indisponivel";
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Backup/Restauração");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Data e Hora", "Situação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Restaurar");
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Fechar");
        jButton2.setFocusable(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            if(!modelo.getValueAt(jTable1.getSelectedRow(), 1).equals("Indisponivel")) {
                if (JOptionPane.showConfirmDialog(this, "Todas as modificações posteriores a data do Backup SERÃO perdidas!!\nTem certeza que deseja realizar a restauração do Backup?", "Restauração", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION){
                    String arquivo = System.getProperty("user.dir")+"\\Backup\\"+formatoArquivo.format(formato.parse((String) modelo.getValueAt(jTable1.getSelectedRow(), 0)))+".fbk";
                    Sistema.restaurar(arquivo);
                    JOptionPane.showMessageDialog(this, "Restauração realizado com sucesso!","Sucesso!", JOptionPane.INFORMATION_MESSAGE);
                    
                    ConversaoDAO cDAO = new ConversaoDAO();
                    Config.conversao = cDAO.carregarPorID(cDAO.retornaUltimoID());
                    dispose();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Backup indisponivel!", "Aviso!", JOptionPane.WARNING_MESSAGE);
            }
        } catch (ParseException ex) {
            new TelaErro(7, ex.getStackTrace()).setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
